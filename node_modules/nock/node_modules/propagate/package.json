{
  "name": "propagate",
  "description": "Propagate events",
  "version": "0.2.2",
  "author": {
    "name": "Pedro Teixeira",
    "email": "pedro.teixeira@gmail.com"
  },
  "contributors": [
    {
      "name": "Pedro Teixeira"
    }
  ],
  "repository": {
    "type": "git",
    "url": "http://github.com/pgte/propagate.git"
  },
  "bugs": {
    "url": "http://github.com/pgte/propagate/issues"
  },
  "engines": [
    "node >= 0.8.1"
  ],
  "main": "./index.js",
  "dependencies": {},
  "devDependencies": {
    "tap": "0.3.x"
  },
  "scripts": {
    "test": "node node_modules/tap/bin/tap.js tests/index.js"
  },
  "tags": [
    "event",
    "emitter",
    "propagation"
  ],
  "readme": "# propagate\n\nPropagate events from one event emitter into another\n\n## Install\n\n```bash\n$ npm install propagate\n```\n\n## Propagate\n\n```javascript\n  var ee1 = new EventEmitter();\n  var ee2 = new EventEmitter();\n  propagate(ee1, ee2);\n\n  ee2.on('event', function(a, b) {\n    console.log('got propagated event', a, b);\n  });\n\n  ee1.emit('event', 'a', 'b');\n```\n\n## Unpropagate\n\nYou can unpropagate by ending the propagation like this:\n\n```javascript\n  var ee1 = new EventEmitter();\n  var ee2 = new EventEmitter();\n  var p = propagate(ee1, ee2);\n\n  // ...\n\n  p.end();\n```\n\n## Only propagate certain events:\n\n```javascript\n  var ee1 = new EventEmitter();\n  var ee2 = new EventEmitter();\n  var p = propagate(['event1', 'event2'], ee1, ee2);\n```\n\n# License\n\nMIT",
  "readmeFilename": "README.md",
  "homepage": "https://github.com/pgte/propagate",
  "_id": "propagate@0.2.2",
  "_from": "propagate@0.2.x"
}

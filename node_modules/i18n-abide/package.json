{
  "author": {
    "name": "Austin King",
    "email": "shout@ozten.com",
    "url": "http://ozten.com"
  },
  "name": "i18n-abide",
  "description": "Express/connect module for Node i18n and l10n support",
  "version": "0.0.14",
  "homepage": "https://github.com/mozilla/i18n-abide",
  "repository": {
    "type": "git",
    "url": "git://github.com/mozilla/i18n-abide.git"
  },
  "bugs": {
    "url": "http://github.com/mozilla/i18n-abide/issues"
  },
  "main": "lib/i18n.js",
  "engines": {
    "node": ">= 0.6.2"
  },
  "dependencies": {
    "async": "0.1.22",
    "gobbledygook": "0.0.3",
    "jsxgettext": "0.1.7",
    "optimist": "0.3.4",
    "plist": "0.4.3"
  },
  "devDependencies": {
    "vows": "0.5.13"
  },
  "scripts": {
    "test": "NODE_PATH=lib node_modules/.bin/vows tests/*-tests.js --spec"
  },
  "bin": {
    "check-l10n-config": "bin/check-l10n-config.js",
    "check-po": "bin/check-po.sh",
    "compile-json": "bin/compile-json",
    "compile-mo": "bin/compile-mo.sh",
    "every-locale.js": "bin/every-locale.js",
    "extract-pot": "bin/extract-pot",
    "merge-po": "bin/merge-po.sh",
    "po2json.js": "bin/po2json.js"
  },
  "licenses": [
    {
      "type": "MPL 2.0",
      "url": "http://www.mozilla.org/MPL/2.0/"
    }
  ],
  "keywords": [
    "express",
    "connect",
    "l10n",
    "i18n",
    "gettext"
  ],
  "readme": "# i18n-abide\n\nThis module **abides by the user's language preferences** and makes it available\nthroughout the app.\n\nThis module **abides by the Mozilla L10n way of doing things**.\n\n**The module abides**.\n\n# Status\n\nUsed in production systems, such as the\n[Mozilla Persona](https://github.com/mozilla/browserid) service in 40+\nlanguages.\n\nAlso used on other websites including:\n* Mozilla Webmaker\n\n# Supported Localization Technologies\n\nThis module supports several localization backends:\n* Gettext PO files (default and documented below)\n* Plist files\n* Transflex key-value-JSON files\n\nThis module supports client side as well as server side localization.\n\n# Usage\n\n    npm install i18n-abide\n\nIn this README, we'll use express and EJS templates, but other\nintegrations are possible.\n\nIn your app where you setup express:\n\n    var i18n = require('i18n-abide');\n\n    app.use(i18n.abide({\n      supported_languages: ['en-US', 'de', 'es', 'db-LB', 'it-CH'],\n      default_lang: 'en-US',\n      debug_lang: 'it-CH',\n      translation_directory: 'i18n'\n    }));\n\nThis block sets up the middleware and views with gettext support.\nWe declare support for English, German, Spanish, and two debug locales\n(more on this later).\n\nIn your routes, you can use the gettext function in `.js` files.\n\n    exports.homepage = function(req, resp) {\n      resp.render('home', {title: req.gettext(\"Hey, careful, man, there's a beverage here!\")});\n    };\n\nIn your layout files, you can add\n\n    <!DOCTYPE html>\n    <html lang=\"<%= lang %>\" dir=\"<%= lang_dir %>\">\n      <head>\n        <meta charset=\"utf-8\">\n        ...\n\nIn your templates files, you can use the gettext function in `.ejs` files:\n\n    <p><%= gettext(\"This will not stand, ya know, this aggression will not stand, man.\") %></p>\n\ni18n-abide also provides a `format` function for string interpolation.\n\nThis module provides both server side translations and client side translations.\nServer side works out of the box and is the most common use case.\n\nIf you also want to do client-side translations,\ni18n-abide provides `lib/gettext.js` and you can do the same in `.js` and\n`.ejs` files.\n\n## Setting Language via HTTP Header\n\nThe `i18n-abide` module uses the\n[`accept-language` HTTP header](http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.4)\nto determine which language to use.\n\nSee [API docs](./docs/API.md) for overriding this via URL or the API directly.\n\n## Translation files\n\nThe `i18n-abide` module currently supports three file formats.\n\n1) PO/POT files, which get transformed to JSON via provided command line tools.\n\n2) [PLIST](https://developer.apple.com/library/mac/documentation/Darwin/Reference/ManPages/man5/plist.5.html) (i.e., XML)\nfiles, which require no transformation prior to use.\n\n3) [Transflex](http://support.transifex.com/customer/portal/articles/1223004-key-value-json-files) [JSON](https://developer.mozilla.org/en/docs/JSON)\n(JavaScript Object Notation) a key-value JSON type,\nwhich require no transformation prior to use.\n\n### PO/POT files\n\nThis is the default and assumed for documentation in this README.\n\nPO files can be compiled to .json or Gettext binary `.mo` files.\n\nFor use on the client side,\nPO files are compiled to JavaScript for easy inclusion into your page or build\nscript.\n\nNOTE: The PO/POT files are also transformed into .JSON,\nbut do not follow the same layout as the Transflex JSON files.\n\nSee [GETTEXT.md](docs/GETTEXT.md) for more details.\n\n### Other file formats\n\nSee [API](docs/API.md) for configuration and details around using Plist or Transflex localization files.\n\n\n# Debugging and Testing\n\n`db-LB` is a special **debug** locale.\nTo trigger it, set your Browser or Operating System language to Italian\n(Switzerland) which is `it-CH`.\nThis fake locale `db-LB` will be triggered,\nit is David Bowie speak for the region of Labyrinth.\n\nOh, hell ya a \"The Dude\" / Bowie Mashup.\nThat just happened.\n\nNow,\nstart up your Node server and visit a page you've wrapped strings in Gettext...\n\n# Tutorial\n\nMozilla Hacks blog has a three part introduction.\n\n* [Localize Your Node.js Service](https://hacks.mozilla.org/2013/04/localize-your-node-js-service-part-1-of-3-a-node-js-holiday-season-part-9/)\n* [Localization community, tools & process](https://hacks.mozilla.org/2013/04/localization-community-tools-process-part-2-of-3-a-node-js-holiday-season-part-10/)\n* [Localization in Action](https://hacks.mozilla.org/2013/04/localization-in-action-part-3-of-3-a-node-js-holiday-season-part-11/)\n\n# Docs\n* See [USAGE](./docs/USAGE.md) for full details.\n* [API docs](./docs/API.md) has more advanced config options and APIs\n* [GETTEXT](./docs/GETTEXT.md) documents how to use PO/POT files\n",
  "readmeFilename": "README.md",
  "_id": "i18n-abide@0.0.14",
  "_from": "i18n-abide@0.0.14"
}
